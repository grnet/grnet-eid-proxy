(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{69:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(73)),o=["components"],c={id:"saml_service_providers",title:"SAML Service Providers"},d={unversionedId:"saml_service_providers",id:"saml_service_providers",isDocsHomePage:!1,title:"SAML Service Providers",description:"SAML2 Service Providers",source:"@site/docs/saml_service_providers.md",slug:"/saml_service_providers",permalink:"/grnet-eid-proxy/docs/saml_service_providers",version:"current",sidebar:"someSidebar",previous:{title:"OpenID Connect Clients",permalink:"/grnet-eid-proxy/docs/openid"},next:{title:"User Attributes",permalink:"/grnet-eid-proxy/docs/user_attributes"}},s=[{value:"SAML2 Service Providers",id:"saml2-service-providers",children:[]},{value:"Metadata registration",id:"metadata-registration",children:[]},{value:"IdP Metadata",id:"idp-metadata",children:[]},{value:"SP Metadata",id:"sp-metadata",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,o);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"saml2-service-providers"},"SAML2 Service Providers"),Object(i.b)("p",null,"A web-based application can enable authentication via the GRNET eID Proxy by connecting as a SAML Service Provider (SP).\nUsers of the application will be redirected to the GRNET eID Proxy in order to authenticate, and the Proxy can authenticate them using any of the supported backend authentication mechanisms, including the eIDAS-Node Infrastructure.\nOnce the user is authenticated, the GRNET eID Proxy will return a SAML assertion to the application containing information about the authenticated user."),Object(i.b)("h2",{id:"metadata-registration"},"Metadata registration"),Object(i.b)("p",null,"SAML authentication relies on the use of metadata.\nBoth parties (the web-based application as a SP and the GRNET eID Proxy as an IdP) need to exchange metadata in order to know and trust each other.\nThe metadata include information such as the location of the service endpoints that need to be invoked, as well as the certificates that will be used to sign SAML messages.\nThe format of the exchanged metadata should be based on the XML-based SAML 2.0 specification.\nUsually, it is not required to manually create such an XML document, as this is automatically generated by all major SAML 2.0 SP software solutions (e.g., Shibboleth, SimpleSAMLphp, and mod_auth_mellon).\nIt is important that the metadata can be retrieved over HTTPS using a browser-friendly SSL certificate, i.e. issued by a trusted certificate authority."),Object(i.b)("h2",{id:"idp-metadata"},"IdP Metadata"),Object(i.b)("p",null,"The IdP metadata of the GRNET eID Proxy are available on a dedicated URL for each environment listed in Table 3."),Object(i.b)("p",null,"Table 3. GRNET eID Proxy IdP metadata endpoints"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"center"},"Test environment"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"center"},Object(i.b)("inlineCode",{parentName:"td"},"https://eid-proxy-demo.aai-dev.grnet.gr/Saml2IDP/proxy.xml"))))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"center"},"Preproduction environment"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"center"},Object(i.b)("inlineCode",{parentName:"td"},"https://eid-proxy.aai-dev.grnet.gr/Saml2IDP/proxy.xml"))))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"center"},"Production environment"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"center"},Object(i.b)("inlineCode",{parentName:"td"},"https://eid-proxy.aai.grnet.gr/Saml2IDP/proxy.xml"))))),Object(i.b)("h2",{id:"sp-metadata"},"SP Metadata"),Object(i.b)("p",null,"Metadata provided by the SP should contain a descriptive name of the service that the SP represents in at least English.\nIt is recommended to also provide the name in other languages which are commonly used in the geographic scope of the deployment.\nThe name should be placed in the ",Object(i.b)("inlineCode",{parentName:"p"},"<md:ServiceName>")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"<md:AttributeConsumingService>")," container.\nIt is recommended that the ",Object(i.b)("inlineCode",{parentName:"p"},"<md:IDPSSODescriptor>")," element included in the SP metadata contains both an AuthnRequestsSigned and an WantAssertionsSigned attribute set to true.\nThe SP metadata should also contain contact information for support and for a technical contact.\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"<md:EntityDescriptor>")," element should contain both a ",Object(i.b)("inlineCode",{parentName:"p"},"<md:ContactPerson>"),' element with a contactType of "support" and a ',Object(i.b)("inlineCode",{parentName:"p"},"<md:ContactPerson>"),' element with a contactType of "technical".\nThe ',Object(i.b)("inlineCode",{parentName:"p"},"<md:ContactPerson>")," elements should contain at least one ",Object(i.b)("inlineCode",{parentName:"p"},"<md:EmailAddress>"),".\nThe support address may be used for generic support questions about the service, while the technical contact may be contacted regarding technical interoperability problems.\nThe technical contact must be responsible for the technical operation of the service represented by the SP."))}p.isMDXComponent=!0},73:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),l=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,u=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?r.a.createElement(u,c(c({ref:t},s),{},{components:n})):r.a.createElement(u,c({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);